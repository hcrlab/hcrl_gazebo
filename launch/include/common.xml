<launch>

  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="debug" default="false" />
  <arg name="world" />
  <arg name="initial_pose_x" default="0" />
  <arg name="initial_pose_y" default="0" />
  <arg name="robot" default="astro"/>

  <arg unless="$(arg debug)" name="gazebo_binary" value="gzserver" />
  <arg if="$(arg debug)" name="gazebo_binary" value="debug" />

  <!-- set use_sim_time flag -->
  <group if="$(arg use_sim_time)">
    <param name="/use_sim_time" value="true" />
  </group>

  <!-- start world (-u to start paused, allowing robot spawn to set initial joint configurations -->
  <node name="gazebo" pkg="gazebo_ros" type="$(arg gazebo_binary)" args="$(arg world) -u" respawn="false" output="screen" required="true" >
    <remap from="/joint_states" to="/stretch/joint_states" if="$(eval (robot == 'stretch') or (robot == 'forky'))" />
    <remap from="/stretch_diff_drive_controller/cmd_vel" to="/stretch/cmd_vel" if="$(eval (robot == 'stretch') or (robot == 'forky'))" />
    <remap from="/stretch_diff_drive_controller/odom" to="/odom" if="$(eval (robot == 'stretch') or (robot == 'forky'))" />
  </node>

  <!-- start gui -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen" launch-prefix="$(optenv OPTIRUN_LAUNCH_PREFIX)" required="true" />
  </group>

  <!-- Oh, you wanted a robot? -->
  
  <include file="$(find hcrl_gazebo)/launch/include/spawn_fetch.xml" if="$(eval (robot == 'astro') or (robot == 'fetch'))">
    <arg name="x" value="$(arg initial_pose_x)" />
    <arg name="y" value="$(arg initial_pose_y)" />
    <arg name="robot" unless="$(arg use_astro)" value="fetch" />
  </include>
  
  <include file="$(find hcrl_gazebo)/launch/include/spawn_stretch.xml" if="$(eval (robot == 'stretch') or (robot == 'forky'))">
    <arg name="x" value="$(arg initial_pose_x)" />
    <arg name="y" value="$(arg initial_pose_y)" />
    <arg name="robot" value="$(arg robot)" />
  </include>



</launch>
